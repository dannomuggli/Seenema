AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Lambda function with API Gateway'

Parameters:
  EnvType:
    Description: Environment type.
    Default: dev
    Type: String
    AllowedValues: [ prod, dev ]

Conditions:
  ShouldUpdateProdVersion: !Equals [ !Ref EnvType, prod ]

Resources:
  AddFriend:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: build/distributions/seenema-backend.zip
      PackageType: Zip
      Handler: com.seenema.backend.AddFriend.handler.AddFriendHandler::handleRequest
      Runtime: java17
      Timeout: 30
      MemorySize: 128
      Events:
        HttpPost:
          Type: Api
          Properties:
            RestApiId: !Ref SeenemaApi
            Path: /addFriend
            Method: POST
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - dynamodb:BatchGetItem
                - dynamodb:BatchWriteItem
                - dynamodb:ConditionCheckItem
                - dynamodb:PutItem
                - dynamodb:DescribeTable
                - dynamodb:DeleteItem
                - dynamodb:GetItem
                - dynamodb:Scan
                - dynamodb:Query
                - dynamodb:UpdateItem
              Resource:
                - !Sub 'arn:aws:dynamodb:us-west-2:${AWS::AccountId}:table/SeenemaUserInfo'
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: !Sub 'arn:aws:logs:us-west-2:${AWS::AccountId}:*'
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - !Sub 'arn:aws:logs:us-west-2:${AWS::AccountId}:log-group:/aws/lambda/testCreateSeenemaUserInDDB:*'

  GetUserInfo:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: build/distributions/seenema-backend.zip
      PackageType: Zip
      Handler: com.seenema.backend.GetUserInfo.handler.GetUserInfoHandler::handleRequest
      Runtime: java17
      Timeout: 30
      MemorySize: 128
      Events:
        HttpPost:
          Type: Api
          Properties:
            RestApiId: !Ref SeenemaApi
            Path: /getUserInfo
            Method: POST
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - dynamodb:BatchGetItem
                - dynamodb:BatchWriteItem
                - dynamodb:ConditionCheckItem
                - dynamodb:PutItem
                - dynamodb:DescribeTable
                - dynamodb:DeleteItem
                - dynamodb:GetItem
                - dynamodb:Scan
                - dynamodb:Query
                - dynamodb:UpdateItem
              Resource:
                - !Sub 'arn:aws:dynamodb:us-west-2:${AWS::AccountId}:table/SeenemaUserInfo'
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: !Sub 'arn:aws:logs:us-west-2:${AWS::AccountId}:*'
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - !Sub 'arn:aws:logs:us-west-2:${AWS::AccountId}:log-group:/aws/lambda/testGetUserInfo:*'

  AddMoviesToMyList:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: build/distributions/seenema-backend.zip
      PackageType: Zip
      Handler: com.seenema.backend.AddMoviesToMyList.handler.AddMoviesToMyListHandler::handleRequest
      Runtime: java17
      Timeout: 30
      MemorySize: 128
      Events:
        HttpPost:
          Type: Api
          Properties:
            RestApiId: !Ref SeenemaApi
            Path: /addMovieToMyList
            Method: POST
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - dynamodb:BatchGetItem
                - dynamodb:BatchWriteItem
                - dynamodb:ConditionCheckItem
                - dynamodb:PutItem
                - dynamodb:DescribeTable
                - dynamodb:DeleteItem
                - dynamodb:GetItem
                - dynamodb:Scan
                - dynamodb:Query
                - dynamodb:UpdateItem
              Resource:
                - !Sub 'arn:aws:dynamodb:us-west-2:${AWS::AccountId}:table/SeenemaUserInfo'
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: !Sub 'arn:aws:logs:us-west-2:${AWS::AccountId}:*'
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - !Sub 'arn:aws:logs:us-west-2:${AWS::AccountId}:log-group:/aws/lambda/testAddMoviesToMyList:*'

  AddMoviesToFriendsSuggestionsList:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: build/distributions/seenema-backend.zip
      PackageType: Zip
      Handler: com.seenema.backend.AddMoviesToFriendsSuggestionsList.handler.AddMoviesToFriendsSuggestionsListHandler::handleRequest
      Runtime: java17
      Timeout: 30
      MemorySize: 128
      Events:
        HttpPost:
          Type: Api
          Properties:
            RestApiId: !Ref SeenemaApi
            Path: /addMoviesToFriendsSuggestionsList
            Method: POST
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - dynamodb:BatchGetItem
                - dynamodb:BatchWriteItem
                - dynamodb:ConditionCheckItem
                - dynamodb:PutItem
                - dynamodb:DescribeTable
                - dynamodb:DeleteItem
                - dynamodb:GetItem
                - dynamodb:Scan
                - dynamodb:Query
                - dynamodb:UpdateItem
              Resource:
                - !Sub 'arn:aws:dynamodb:us-west-2:${AWS::AccountId}:table/SeenemaUserInfo'
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: !Sub 'arn:aws:logs:us-west-2:${AWS::AccountId}:*'
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - !Sub 'arn:aws:logs:us-west-2:${AWS::AccountId}:log-group:/aws/lambda/testAddMoviesToFriendsSuggestionsList:*'

  DevLambdaAlias:
    Type: 'AWS::Lambda::Alias'
    Properties:
      FunctionName: !Ref AddFriend
      FunctionVersion: $LATEST
      Name: development

  DevGetUserInfoLambdaAlias:
    Type: 'AWS::Lambda::Alias'
    Properties:
      FunctionName: !Ref GetUserInfo
      FunctionVersion: $LATEST
      Name: development

  DevAddMoviesToMyListLambdaAlias:
    Type: 'AWS::Lambda::Alias'
    Properties:
      FunctionName: !Ref AddMoviesToMyList
      FunctionVersion: $LATEST
      Name: development

  DevAddMoviesToFriendsSuggestionsListLambdaAlias:
    Type: 'AWS::Lambda::Alias'
    Properties:
      FunctionName: !Ref AddMoviesToFriendsSuggestionsList
      FunctionVersion: $LATEST
      Name: development

  LambdaVersion:
    Type: 'AWS::Lambda::Version'
    Condition: ShouldUpdateProdVersion
    Properties:
      FunctionName: !Ref AddFriend

  LambdaVersionForGetUserInfo:
    Type: 'AWS::Lambda::Version'
    Condition: ShouldUpdateProdVersion
    Properties:
      FunctionName: !Ref GetUserInfo

  LambdaVersionForAddMoviesToMyList:
    Type: 'AWS::Lambda::Version'
    Condition: ShouldUpdateProdVersion
    Properties:
      FunctionName: !Ref AddMoviesToMyList

  LambdaVersionForAddMoviesToFriendsSuggestionsList:
    Type: 'AWS::Lambda::Version'
    Condition: ShouldUpdateProdVersion
    Properties:
      FunctionName: !Ref AddMoviesToFriendsSuggestionsList

  ProdLambdaAlias:
    Type: 'AWS::Lambda::Alias'
    Condition: ShouldUpdateProdVersion
    Properties:
      FunctionName: !Ref AddFriend
      FunctionVersion: !Ref LambdaVersion
      Name: production

  ProdGetUserInfoLambdaAlias:
    Type: 'AWS::Lambda::Alias'
    Condition: ShouldUpdateProdVersion
    Properties:
      FunctionName: !Ref GetUserInfo
      FunctionVersion: !Ref LambdaVersionForGetUserInfo
      Name: production

  ProdAddMoviesToMyListLambdaAlias:
    Type: 'AWS::Lambda::Alias'
    Condition: ShouldUpdateProdVersion
    Properties:
      FunctionName: !Ref AddMoviesToMyList
      FunctionVersion: !Ref LambdaVersionForAddMoviesToMyList
      Name: production

  ProdAddMoviesToFriendsSuggestionsList:
    Type: 'AWS::Lambda::Alias'
    Condition: ShouldUpdateProdVersion
    Properties:
      FunctionName: !Ref AddMoviesToFriendsSuggestionsList
      FunctionVersion: !Ref LambdaVersionForAddMoviesToFriendsSuggestionsList
      Name: production

  SeenemaApi:
    Type: 'AWS::ApiGatewayV2::Api'
    Properties:
      Name: SeenemaApi
      ProtocolType: HTTP
      Description: Seenema API
      CorsConfiguration:
        AllowOrigins:
          - '*'

  AddFriendIntegration:
    Type: 'AWS::ApiGatewayV2::Integration'
    Properties:
      ApiId: !Ref SeenemaApi
      IntegrationType: AWS_PROXY
      PayloadFormatVersion: 2.0
      IntegrationUri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AddFriend.Arn}/invocations

  GetUserInfoIntegration:
    Type: 'AWS::ApiGatewayV2::Integration'
    Properties:
      ApiId: !Ref SeenemaApi
      IntegrationType: AWS_PROXY
      PayloadFormatVersion: 2.0
      IntegrationUri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetUserInfo.Arn}/invocations

  AddMoviesToMyListIntegration:
    Type: 'AWS::ApiGatewayV2::Integration'
    Properties:
      ApiId: !Ref SeenemaApi
      IntegrationType: AWS_PROXY
      PayloadFormatVersion: 2.0
      IntegrationUri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AddMoviesToMyList.Arn}/invocations

  AddMoviesToFriendsSuggestionsListIntegration:
    Type: 'AWS::ApiGatewayV2::Integration'
    Properties:
      ApiId: !Ref SeenemaApi
      IntegrationType: AWS_PROXY
      PayloadFormatVersion: 2.0
      IntegrationUri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AddMoviesToFriendsSuggestionsList.Arn}/invocations

  AddFriendRoute:
    Type: 'AWS::ApiGatewayV2::Route'
    Properties:
      ApiId: !Ref SeenemaApi
      RouteKey: 'POST /addFriend'
      AuthorizationType: NONE
      Target: !Sub integrations/${AddFriendIntegration}

  GetUserInfoRoute:
    Type: 'AWS::ApiGatewayV2::Route'
    Properties:
      ApiId: !Ref SeenemaApi
      RouteKey: 'POST /getUserInfo'
      AuthorizationType: NONE
      Target: !Sub integrations/${GetUserInfoIntegration}

  AddMoviesToMyListRoute:
    Type: 'AWS::ApiGatewayV2::Route'
    Properties:
      ApiId: !Ref SeenemaApi
      RouteKey: 'POST /addMovieToMyList'
      AuthorizationType: NONE
      Target: !Sub integrations/${AddMoviesToMyListIntegration}

  AddMoviesToFriendsSuggestionsListRoute:
    Type: 'AWS::ApiGatewayV2::Route'
    Properties:
      ApiId: !Ref SeenemaApi
      RouteKey: 'POST /addMoviesToFriendsSuggestionsList'
      AuthorizationType: NONE
      Target: !Sub integrations/${AddMoviesToFriendsSuggestionsListIntegration}

  DevelopmentStage:
    Type: 'AWS::ApiGatewayV2::Stage'
    Properties:
      ApiId: !Ref SeenemaApi
      StageName: 'dev'
      AutoDeploy: true
      StageVariables:
        LambdaAlias: development

  ProductionStage:
    Type: 'AWS::ApiGatewayV2::Stage'
    Properties:
      ApiId: !Ref SeenemaApi
      StageName: 'prod'
      AutoDeploy: false
      StageVariables:
        LambdaAlias: production

Outputs:
  BetaApiGatewayEndpoint:
    Value: !Sub 'https://${SeenemaApi}.execute-api.${AWS::Region}.amazonaws.com/dev'
  ProdApiGatewayEndpoint:
    Value: !Sub 'https://${SeenemaApi}.execute-api.${AWS::Region}.amazonaws.com/prod'
